<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE FBType SYSTEM "http://www.holobloc.com/xml/LibraryElement.dtd" >
<FBType Name="ConveyorCTLMulticast" Comment="Basic Function Block Type" >
  <Identification Standard="61499-2" />
  <VersionInfo Organization="Rockwell Automation" Version="0.2" Author="JHC" Date="2003-12-04" Remarks="Renamed for better indexing." />
  <VersionInfo Organization="Rockwell Automation" Version="0.1" Author="JHC" Date="2002-11-05" Remarks="Corrected missing ST element in Algorithm REQ." />
  <VersionInfo Organization="Rockwell Automation" Version="0.0" Author="JHC" Date="2000-05-30" />
  <CompilerInfo header="package fb.rt.cs725;" >
  </CompilerInfo>
  <InterfaceList>
    <EventInputs>
      <Event Name="INIT" Comment="Initialization Request" >
        <With Var="PE_IN" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="PE_OUT" />
      </Event>
      <Event Name="REQ" Comment="Normal Execution Request" >
        <With Var="PE_IN" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="PE_OUT" />
      </Event>
      <Event Name="CAS_STOP" >
      </Event>
      <Event Name="CAS_START" >
      </Event>
      <Event Name="PE_EVENT" >
        <With Var="PE_OUT" />
        <With Var="PE_IN" />
      </Event>
      <Event Name="IN_REPLY" >
        <With Var="IN_LAMPORT" />
        <With Var="isProc0Requested" />
        <With Var="isProc0Replied" />
      </Event>
      <Event Name="IN_REQUEST" >
        <With Var="IN_LAMPORT" />
        <With Var="isProc0Requested" />
      </Event>
    </EventInputs>
    <EventOutputs>
      <Event Name="INITO" Comment="Initialization Confirm" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="CNF" Comment="Execution Confirmation" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="STOP" >
      </Event>
      <Event Name="START" >
      </Event>
      <Event Name="OUT_REPLY" >
        <With Var="OUT_LAMPORT" />
        <With Var="thisProcRequested" />
        <With Var="thisProcReplied" />
      </Event>
      <Event Name="OUT_REQUEST" >
        <With Var="OUT_LAMPORT" />
        <With Var="thisProcRequested" />
      </Event>
    </EventOutputs>
    <InputVars>
      <VarDeclaration Name="PE_IN" Type="BOOL" Comment="Input event qualifier" />
      <VarDeclaration Name="Block" Type="BOOL" />
      <VarDeclaration Name="Candidate" Type="BOOL" />
      <VarDeclaration Name="PE_OUT" Type="BOOL" />
      <VarDeclaration Name="IN_LAMPORT" Type="UINT" />
      <VarDeclaration Name="isProc0Requested" Type="BOOL" />
      <VarDeclaration Name="isProc0Replied" Type="BOOL" />
    </InputVars>
    <OutputVars>
      <VarDeclaration Name="MotoRotate" Type="BOOL" Comment="Output event qualifier" />
      <VarDeclaration Name="BlockCon" Type="BOOL" />
      <VarDeclaration Name="OUT_LAMPORT" Type="UINT" />
      <VarDeclaration Name="thisProcRequested" Type="BOOL" />
      <VarDeclaration Name="thisProcReplied" Type="BOOL" />
    </OutputVars>
  </InterfaceList>
  <BasicFB>
    <InternalVars>
      <VarDeclaration Name="lastPE" Type="BOOL" InitialValue="1" />
      <VarDeclaration Name="lastBlock" Type="BOOL" InitialValue="0" />
      <VarDeclaration Name="lamportTime" Type="UINT" />
      <VarDeclaration Name="previousState" Type="INT" />
      <VarDeclaration Name="allReplied" Type="BOOL" />
      <VarDeclaration Name="replies" Type="BOOL" ArraySize="1" />
      <VarDeclaration Name="requestQueue" Type="UINT" ArraySize="25" />
      <VarDeclaration Name="I" Type="INT" />
    </InternalVars>
    <ECC >
      <ECState Name="START" Comment="Initial State" x="1283.3333" y="677.7778" >
      </ECState>
      <ECState Name="INIT" Comment="Initialization" x="1544.4443" y="111.11111" >
        <ECAction Algorithm="INIT" Output="INITO" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="REQ" Comment="Normal execution" x="638.88885" y="166.66666" >
        <ECAction Algorithm="REQ" Output="CNF" />
      </ECState>
      <ECState Name="CAS_START" x="4105.555" y="111.11111" >
        <ECAction Algorithm="START" Output="START" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="CAS_STOP" x="3077.7776" y="111.11111" >
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="WANTED" x="244.44443" y="1194.4445" >
        <ECAction Algorithm="SEND_ALL_REQUESTS" Output="OUT_REQUEST" />
        <ECAction Algorithm="STOP" Output="STOP" />
        <ECAction Output="CNF" />
        <ECAction Algorithm="WANTED_ALG" />
      </ECState>
      <ECState Name="HELD" x="2077.7776" y="2527.7776" >
        <ECAction Algorithm="START" Output="START" />
        <ECAction Output="CNF" />
        <ECAction Algorithm="HELD_ALG" />
      </ECState>
      <ECState Name="RELEASED" x="4677.778" y="2733.3333" >
        <ECAction Algorithm="REPLY_ALL" />
        <ECAction Algorithm="RELEASED_ALG" />
      </ECState>
      <ECState Name="WANTED_PENDING" x="422.2222" y="1772.2222" >
        <ECAction Algorithm="WANTED_PENDING_ALG" />
      </ECState>
      <ECState Name="NEW_REPLY" x="1388.8888" y="2188.889" >
        <ECAction Algorithm="HANDLE_REPLY" />
        <ECAction Algorithm="NEW_REPLY_ALG" />
      </ECState>
      <ECState Name="ADD_TO_QUEUE" x="3344.4443" y="1383.3333" >
        <ECAction Algorithm="QUEUE_ALG" />
      </ECState>
      <ECTransition Source="START" Destination="INIT" Condition="INIT" x="1477.7777" y="416.66666" />
      <ECTransition Source="INIT" Destination="START" Condition="1" x="1377.7777" y="350.0" />
      <ECTransition Source="START" Destination="REQ" Condition="REQ&#38;Candidate" x="722.22217" y="483.3333" />
      <ECTransition Source="REQ" Destination="START" Condition="1" x="927.7778" y="394.44443" />
      <ECTransition Source="START" Destination="CAS_START" Condition="CAS_START" x="4500.0" y="133.33333" />
      <ECTransition Source="CAS_START" Destination="START" Condition="1" x="4750.0" y="72.22222" />
      <ECTransition Source="START" Destination="CAS_STOP" Condition="CAS_STOP" x="2400.0" y="150.0" />
      <ECTransition Source="CAS_STOP" Destination="START" Condition="1" x="2405.5554" y="244.44443" />
      <ECTransition Source="START" Destination="WANTED" Condition="PE_EVENT&#38;!PE_IN" x="244.44443" y="833.3333" />
      <ECTransition Source="WANTED" Destination="WANTED_PENDING" Condition="1" x="244.44443" y="1444.4443" />
      <ECTransition Source="WANTED_PENDING" Destination="NEW_REPLY" Condition="IN_REPLY" x="594.4444" y="2188.889" />
      <ECTransition Source="HELD" Destination="RELEASED" Condition="PE_EVENT&#38;!PE_OUT" x="2350.0" y="2927.7776" />
      <ECTransition Source="NEW_REPLY" Destination="WANTED_PENDING" Condition="!allReplied" x="788.88885" y="1955.5554" />
      <ECTransition Source="NEW_REPLY" Destination="HELD" Condition="allReplied" x="1422.2222" y="2383.3333" />
      <ECTransition Source="RELEASED" Destination="START" Condition="1" x="4677.778" y="677.7778" />
      <ECTransition Source="RELEASED" Destination="ADD_TO_QUEUE" Condition="IN_REPLY" x="4077.7776" y="1833.3333" />
      <ECTransition Source="HELD" Destination="ADD_TO_QUEUE" Condition="IN_REPLY" x="2900.0" y="1738.8888" />
      <ECTransition Source="WANTED_PENDING" Destination="ADD_TO_QUEUE" Condition="IN_REPLY" x="1516.6666" y="1500.0" />
      <ECTransition Source="WANTED" Destination="ADD_TO_QUEUE" Condition="IN_REPLY" x="2261.111" y="1300.0" />
      <ECTransition Source="NEW_REPLY" Destination="ADD_TO_QUEUE" Condition="IN_REPLY" x="1922.2222" y="1805.5555" />
      <ECTransition Source="ADD_TO_QUEUE" Destination="RELEASED" Condition="previousState = 1" x="3833.3333" y="2155.5554" />
      <ECTransition Source="ADD_TO_QUEUE" Destination="HELD" Condition="previousState = 2" x="2755.5554" y="2183.3333" />
      <ECTransition Source="ADD_TO_QUEUE" Destination="NEW_REPLY" Condition="previousState = 3" x="2244.4443" y="1877.7777" />
      <ECTransition Source="ADD_TO_QUEUE" Destination="WANTED_PENDING" Condition="previousState = 4" x="1899.9999" y="1605.5555" />
      <ECTransition Source="ADD_TO_QUEUE" Destination="WANTED" Condition="previousState = 5" x="2227.7776" y="1144.4445" />
    </ECC>
  <Algorithm Name="INIT" Comment="Initialization algorithm" >
    <ST Text="MotoRotate := TRUE;&#10;Block := FALSE;&#10;&#10;System.out.println(this + &#34; &#34; + MotoRotate);&#10;System.out.println(MotoRotate);&#10;&#10;lamportTime := 0;&#10;" />
  </Algorithm>
  <Algorithm Name="REQ" Comment="Normally executed algorithm" >
    <ST Text="//System.out.println(this +  &#34; -> Candidate&#34; + Candidate);&#10;IF Candidate THEN&#10;IF lastPE !:= PE_IN THEN&#10;IF NOT PE_IN THEN&#10;BlockCon:= TRUE;&#10;System.out.println(&#34;BlockCon = true&#34;);&#10;ELSE&#10;BlockCon:=FALSE;&#10;System.out.println(&#34;BlockCon = false&#34;);&#10;END_IF&#10;lastPE := PE_IN;&#10;END_IF&#10;IF lastBlock !:= Block THEN&#10;IF Block THEN&#10;STOP.serviceEvent(this);&#10;MotoRotate := FALSE;&#10;System.out.println(&#34;Cas Stop&#34;);&#10;ELSE&#10;START.serviceEvent(this);&#10;MotoRotate := TRUE;&#10;System.out.println(&#34;Cas Start&#34;);&#10;END_IF&#10;lastBlock := Block;&#10;END_IF&#10;END_IF&#10;" />
  </Algorithm>
  <Algorithm Name="START" >
    <ST Text="MotoRotate:=TRUE;&#10;System.out.println(this + &#34; Start &#34; + MotoRotate);&#10;&#10;System.out.println(&#34;Start &#34; + MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="STOP" >
    <ST Text="MotoRotate := FALSE;&#10;System.out.println(this + &#34; Stop &#34; + MotoRotate);&#10;&#10;System.out.println(&#34;Stop &#34; + MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="SEND_ALL_REQUESTS" >
    <ST Text="OUT_LAMPORT := lamportTime;&#10;thisProcRequested := TRUE;&#10;" />
  </Algorithm>
  <Algorithm Name="HANDLE_REPLY" >
    <ST Text="//first, check which processes are replying&#10;IF (isProc0Replied = TRUE) THEN&#10;    replies[0] := TRUE;&#10;END_IF;&#10;&#10;//now, check if all replies are present&#10;allReplied := TRUE;&#10;FOR I := 0 TO 0 DO&#10;    IF replies[I] = FALSE THEN&#10;        allReplied := FALSE;&#10;    END_IF;&#10;END_FOR&#10;" />
  </Algorithm>
  <Algorithm Name="REPLY_ALL" >
    <ST Text="" />
  </Algorithm>
  <Algorithm Name="WANTED_PENDING_ALG" >
    <ST Text="previousState := 4;&#10;" />
  </Algorithm>
  <Algorithm Name="WANTED_ALG" >
    <ST Text="previousState := 5;&#10;" />
  </Algorithm>
  <Algorithm Name="NEW_REPLY_ALG" >
    <ST Text="previousState := 3;&#10;" />
  </Algorithm>
  <Algorithm Name="RELEASED_ALG" >
    <ST Text="previousState := 1;&#10;" />
  </Algorithm>
  <Algorithm Name="HELD_ALG" >
    <ST Text="previousState := 2;&#10;" />
  </Algorithm>
  <Algorithm Name="QUEUE_ALG" >
    <ST Text="" />
  </Algorithm>
  </BasicFB>
</FBType>
